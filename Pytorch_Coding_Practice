# WHERE
# HOW
# 
# 1. code & QA parts
# 2. slides & summary to find some WHY

# %matplotlib inline
import torch
import torchvision
from torch import nn
from d2l import torch as d2l

d2l.set_figsize()
img = d2l.Image.open('../img/ligui.jpg')
d2l.plt.imshow(img)

def apply(img, aug, num_rows=2, num_cols=4, scale=1.5):
	Y = [aug(img) for _ in range(num_rows*num_cols)]
	d2l.show_images(Y, num_rows, num_cols, scale=scale)

apply(img, torchvision.transforms.RandomHorizontalFlip())
apply(img, torchvision.transforms.RandomVerticalFlip())

shape_aug = torchvision.transforms.RandomResizedCrop(
	(200,200), scale=(0.1,1), ratio=(0.5,2))
apply(img, shape_aug)

apply(img, torchvision.transforms.ColorJitter(brightness=0.5, contrast=0, saturation=0, hue=0))

apply(img, torchvision.transforms.ColorJitter(brightness=0, contrast=0, saturation=0, hue=0.5))

all_images = torchvision.datasets.CIFAR10(train=True, root='../data', download=True)
d2l.show_images([all_image[i][0] for i in range(32)], 4, 8, scale=0.8);

train_augs = torchvision.transforms.Compose([
	torchvision.transforms.RandomHorizontalFlip(),
	torchvision.transforms.ToTensor()])
test_augs = torchvision.transforms.Compose([
	torchvision.transforms.ToTensor()])

def load_cifar10(is_train, augs, batch_size):
	dataset = torchvision.datasets.CIFAR10(root='../data', train=is_train, transform=augs, download=True)
	dataloader = torch.utils.data.DataLoder(dataset, batch_size=batch_size, shuffle=is_train, num_workers=d2l.get_dataloader_workers())	
	return dataloader